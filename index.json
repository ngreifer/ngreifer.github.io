[{"authors":null,"categories":null,"content":"I’m Noah Greifer (pronounced gree-fur; pronouns: he/him), a statistical consultant and programmer at Harvard University. I provide statistical consulting services as a member of the Data Science Services team at the Institute for Quantitative Social Science (IQSS) at Harvard. I also develop R packages, both as part of my job and in my personal time. Some of these packages include MatchIt, WeightIt, and cobalt, which facilitate the use of propensity score methods. See my other packages at the Software link above. I post on my blog about R programming, statistical analysis, and R package development.\nI currently reside in Cambridge, MA, but I grew up in Los Angeles, CA, and have lived in San Diego, CA, Portland, OR, and Durham, NC.\n Download my resumé. -- ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"05d2cb0df913990c9440f73073d0c063","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I’m Noah Greifer (pronounced gree-fur; pronouns: he/him), a statistical consultant and programmer at Harvard University. I provide statistical consulting services as a member of the Data Science Services team at the Institute for Quantitative Social Science (IQSS) at Harvard.","tags":null,"title":"Noah Greifer","type":"authors"},{"authors":null,"categories":[],"content":" Genetic matching sounds cool and science-y, something we social scientists love because nobody thinks what we do is “real” science. And genetic matching is cool and science-y, but not because it has anything to do with genes or DNA. Genetic matching is a method of adjusting for confounding in observational studies; it is a close relative of propensity score matching and Mahalanobis distance matching and serves exactly the same purpose. Sekhon (2011) and Diamond and Sekhon (2013) describe genetic matching, but I’ll explain it here in simple terms and with an emphasis on its generality, which is undersold by its implementations.\nThis post won’t make any sense if you don’t know what matching in general is. Go read Stuart (2010), Greifer and Stuart (2021), and the MatchIt vignette on matching methods to learn about them. The focus here will be on pair matching, which involves assigning units to pairs or strata based on the distances between them, then discarding unpaired units.\nThe goal of matching is balanced samples, i.e., samples where the distribution of covariates in the treated and control groups is the same so that an estimated treatment effect cannot be said to be due to differences in the covariate distributions. Why, then, do we make pairs? Close pairs create balance, in theory. How do we compute how close units are to each other? There are several ways; a common one is the Mahalanobis distance, as described for matching in Rubin (1980), and which I’ll describe here.\nThe Mahalanobis distance between two units \\(i\\) and \\(j\\) is defined as\n\\[ \\delta^{md}_{i,j}=\\sqrt{(\\mathbf{x}_i-\\mathbf{x}_j)\\Sigma^{-1}(\\mathbf{x}_i-\\mathbf{x}_j)\u0026#39;} \\]\nwhere \\(\\mathbf{x}_i\\) is the vector of covariates for unit \\(i\\) (i.e., that unit’s row in the dataset) and \\(\\Sigma\\) is the covariance matrix of the covariates1. Equivalently, the Mahalanobis distance is the Euclidean distance (i.e., the regular distance) computed on the standardized principal components. The Mahalanobis distance is an improvement over the Euclidean distance of the covariates because it standardizes the covariates to be on the same scale and adjusts for correlations between covariates (so two highly correlated variables only count once). A great description of the Mahalanobis distance is here (though there it is not described in the context of matching).\nGenetic matching concerns a generalization of the Mahalanobis distance, called the generalized Mahalanobis distance, which additionally involves a weight matrix. The generalized Mahalanobis distance is defined as\n\\[ \\delta^{gmd}_{i,j}(W)=\\sqrt{(\\mathbf{x}_i-\\mathbf{x}_j)\u0026#39;\\left(\\Sigma^{-\\frac{1}{2}}\\right)\u0026#39; W\\Sigma^{-\\frac{1}{2}}(\\mathbf{x}_i-\\mathbf{x}_j)} \\]\nwhere \\(\\Sigma^{-\\frac{1}{2}}\\) is the “square root” of the inverse of the covariance matrix (e.g., the Cholesky decomposition), and \\(W\\) is a symmetric weight matrix that can contain anything but in most cases is a diagonal matrix with a scalar weight for each covariate in \\(\\mathbf{x}\\) (not weights for each unit like in propensity score weighting; a weight for each covariate), i.e., \\(W = \\text{diag}(\\begin{bmatrix} w_1 \u0026amp; \\dots \u0026amp; w_p \\end{bmatrix})\\). The generalized Mahalanobis distance is equal to the usual Mahalanobis distance when \\(W=I\\), the identity matrix.\nWhat does any of this have to do with genetic matching? Well, “genetic matching” is a bit of a misnomer; it’s not a matching method. It’s a method of estimating \\(W\\). Genetic matching finds the \\(W\\) that, when incorporated in a generalized Mahalanobis distance used to match treated and control units, yields the best balance. Once you have found \\(W\\), you then do a regular round of matching, and that is your matched sample.\nTo put it slightly more formally, consider a function \\(\\text{match}(\\delta)\\), which takes in a distance matrix \\(\\delta\\) and produces a matched set of treated and control units, characterized by a set of matching weights (e.g., 1 if matched, 0 if unmatched) and pair membership for each unit. Consider a function \\(\\text{imbalance}(m)\\), which takes in the output of a \\(\\text{match}(\\delta)\\) and returns a scalar imbalance metric (e.g., the largest absolute standardized mean difference among all the covariates). We can then write the genetic matching problem as the following:\n\\[ \\underset{W}{\\operatorname{arg\\,min}} \\, \\text{imbalance}(\\text{match}(\\delta^{gmd}(W))) \\]\nGenetic matching is very general; there are many ways to do the matching (i.e., many ways to specify the \\(\\text{match}()\\) function) and many ways to characterize imbalance (i.e., many ways to specify the \\(\\text{imbalance}()\\) function) (and even several ways to specific \\(\\delta()\\)!). Although nearest neighbor matching is often used for \\(\\text{match}()\\), any matching method that uses a distance matrix could be as well. A specific imbalance measure (which I’ll explain in more detail later) is most often used for \\(\\text{imbalance}()\\) because it is the default in the software that …","date":1665187200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665187200,"objectID":"1b788514d90afeaa9df4e6c04f68115a","permalink":"https://ngreifer.github.io/blog/genetic-matching/","publishdate":"2022-10-08T00:00:00Z","relpermalink":"/blog/genetic-matching/","section":"blog","summary":"Genetic matching sounds cool and science-y, something we social scientists love because nobody thinks what we do is “real” science. And genetic matching is cool and science-y, but not because it has anything to do with genes or DNA.","tags":["matching","R"],"title":"Genetic Matching, from the Bottom Up","type":"blog"},{"authors":null,"categories":null,"content":"This page documents the software packages I have worked on. if you have any questions about them, please submit your question to their GitHub issues page rather than emailing me. You are also welcome to ask a question on StackOverflow or CrossValidated, which I check often.\nR packages These packages are ones that I am a primary author on and have expertise on the methods implemented. I consider these packages to be “mine”, at least partly, in the sense that I can speak not only on the implementation but on the methods as well.\n cobalt: Covariate Balance Tables and Plots  Noah Greifer | website | CRAN | source   WeightIt: Weighting for Covariate Balance in Observational Studies  Noah Greifer | website | CRAN | source   MatchIt: Nonparametric Preprocessing for Parametric Causal Inference  Daniel Ho, Kosuke Imai, Gary King, Elizabeth Stuart, and Noah Greifer | website | CRAN | source   MatchThem: Matching and Weighting Multiply Imputed Datasets  Farhad Pishgar and Noah Greifer | CRAN | source   optweight: Targeted Stable Balancing Weights Using Optimization  Noah Greifer | CRAN | source   MatchingFrontier: Computation of the Balance-Sample Size Frontier in Matching Methods for Causal Inference  Gary King, Christopher Lucas, Richard Nielsen, and Noah Greifer | website | source   fwb: Fractional Weighted Bootstrap  Noah Greifer | website | CRAN | source    These packages are ones that I have developed as part of my job but which I don’t consider “mine” in the sense that I am not the primary maintainer and I don’t have expertise on the methods implemented. Please do not contact me about these packages.\n  netlit: Augment a literature review with network analysis statistics\n Devin Judge-Lord and Noah Greifer | website | source    EvoPhylo: Pre- And Postprocessing of Morphological Data from Relaxed Clock Bayesian Phylogenetics\n Tiago Simões, Noah Greifer, and Stephanie Pierce | website | CRAN | source    Morphoscape: Computation and Visualization of Adaptive Landscapes\n Blake Dickson, Stephanie Pierce, and Noah Greifer | website | CRAN | source    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6fcae98d7df3b6c44952e7b5fed181e3","permalink":"https://ngreifer.github.io/software/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/software/","section":"","summary":"This page documents the software packages I have worked on. if you have any questions about them, please submit your question to their GitHub issues page rather than emailing me. You are also welcome to ask a question on StackOverflow or CrossValidated, which I check often.","tags":null,"title":"Software","type":"page"}]