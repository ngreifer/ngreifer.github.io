[{"authors":null,"categories":null,"content":"I’m Noah Greifer (pronounced gree-fur; pronouns: he/him), a statistical consultant and programmer at Harvard University. I provide statistical consulting services as a member of the Data Science Services team at the Institute for Quantitative Social Science (IQSS) at Harvard. I also develop R packages, both as part of my job and in my personal time. Some of these packages include MatchIt, WeightIt, and cobalt, which facilitate the use of propensity score methods. See my other packages at the Software link above. I post on my blog about R programming, statistical analysis, and R package development.\nI currently reside in Cambridge, MA, but I grew up in Los Angeles, CA, and have lived in San Diego, CA, Portland, OR, and Durham, NC.\n Download my resumé. -- ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"05d2cb0df913990c9440f73073d0c063","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I’m Noah Greifer (pronounced gree-fur; pronouns: he/him), a statistical consultant and programmer at Harvard University. I provide statistical consulting services as a member of the Data Science Services team at the Institute for Quantitative Social Science (IQSS) at Harvard.","tags":null,"title":"Noah Greifer","type":"authors"},{"authors":null,"categories":null,"content":" Today I’m going to demonstrate performing a subgroup analysis after propensity score matching using R. Subgroup analysis, also known as moderation analysis or the analysis of effect modification, concerns the estimation of treatment effects within subgroups of a pre-treatment covariate. This post assumes you understand how to do propensity score matching. For a general introduction to propensity score matching, I recommend Austin (2011) and the {MatchIt} introductory vignette. If you understand inverse probability weighting but aren’t too familiar with matching, I recommend my article with Liz Stuart (Greifer and Stuart 2021). For an introduction to subgroup analysis with propensity scores, you can also check out Green and Stuart (2014). Here, I’ll mainly try to get to the point.\nThe dataset we’ll use today is the famous Lalonde dataset, investigating the effect of a job training program on earnings. We’ll use the version of this dataset that comes with the {MatchIt} package.\ndata(\u0026#34;lalonde\u0026#34;, package = \u0026#34;MatchIt\u0026#34;) head(lalonde) ## treat age educ race married nodegree re74 re75 re78 ## NSW1 1 37 11 black 1 1 0 0 9930.0460 ## NSW2 1 22 9 hispan 0 1 0 0 3595.8940 ## NSW3 1 30 12 black 0 0 0 0 24909.4500 ## NSW4 1 27 11 black 0 1 0 0 7506.1460 ## NSW5 1 33 8 black 0 1 0 0 289.7899 ## NSW6 1 22 9 black 0 1 0 0 4056.4940 The treatment is treat, the outcome in the original study was re78 (1978 earnings), and the other variables are pretreatment covariates that we want to adjust for using propensity score matching. In this example, I’ll actually be using a different outcome, re78_0, which is whether the participant’s 1978 earnings were equal to 0 or not, because I want to demonstrate the procedure for a binary outcome. So, we hope the treatment effect is negative, i.e., the risk of 0 earnings decreases for those in the treatment.\nlalonde$re78_0 \u0026lt;- as.numeric(lalonde$re78 == 0) Our moderator will be race, a 3-category factor variable.\nwith(lalonde, table(race)) ## race ## black hispan white ## 243 72 299 Our estimand will be the subgroup-specific and marginal average treatment effect on the treated (ATT), using the risk difference as our effect measure.\nPackages You’ll Need We’ll need a few R packages for this analysis. We’ll need {MatchIt} and {optmatch} for the matching, {cobalt} for the balance assessment, {marginaleffects} for estimating the treatment effects, and {sandwich} for computing the standard errors. You can install those using the code below:\ninstall.packages(c(\u0026#34;MatchIt\u0026#34;, \u0026#34;optmatch\u0026#34;, \u0026#34;cobalt\u0026#34;, \u0026#34;marginaleffects\u0026#34;, \u0026#34;sandwich\u0026#34;)) Let’s get into it!\n Step 1: Subgroup Matching Our first step is to perform the matching. Although there are a few strategies for performing matching for subgroup analysis, in general subgroup-specific matching tends to work best, though it requires a little extra work.\nWe’ll do this by splitting the dataset by race and performing a separate matching analysis within each one.\n#Splitting the data lalonde_b \u0026lt;- subset(lalonde, race == \u0026#34;black\u0026#34;) lalonde_h \u0026lt;- subset(lalonde, race == \u0026#34;hispan\u0026#34;) lalonde_w \u0026lt;- subset(lalonde, race == \u0026#34;white\u0026#34;) Here we’ll use full matching because 1:1 matching without replacement, the most common (but worst) way to do propensity score matching, doesn’t work well in this dataset. The process described below works exactly the same for 1:1 and most other kinds of matching as it does for full matching. We’ll estimate propensity scores in each subgroup, here using probit regression, which happens to yield better balance than logistic regression does.\nlibrary(\u0026#34;MatchIt\u0026#34;) #Matching in race == \u0026#34;black\u0026#34; m.out_b \u0026lt;- matchit(treat ~ age + educ + married + nodegree + re74 + re75, data = lalonde_b, method = \u0026#34;full\u0026#34;, estimand = \u0026#34;ATT\u0026#34;, link = \u0026#34;probit\u0026#34;) #Matching in race == \u0026#34;hispan\u0026#34; m.out_h \u0026lt;- matchit(treat ~ age + educ + married + nodegree + re74 + re75, data = lalonde_h, method = \u0026#34;full\u0026#34;, estimand = \u0026#34;ATT\u0026#34;, link = \u0026#34;probit\u0026#34;) #Matching in race == \u0026#34;black\u0026#34; m.out_w \u0026lt;- matchit(treat ~ age + educ + married + nodegree + re74 + re75, data = lalonde_w, method = \u0026#34;full\u0026#34;, estimand = \u0026#34;ATT\u0026#34;, link = \u0026#34;probit\u0026#34;)  Step 2: Assessing Balance within Subgroups We need to assess subgroup balance; we can do that using summary() on each matchit object, or we can use functions from {cobalt}.\nBelow are examples of using summary() and cobalt::bal.tab() on one matchit object at a time1:\nsummary(m.out_b) ## ## Call: ## matchit(formula = treat ~ age + educ + married + nodegree + re74 + ## re75, data = lalonde_b, method = \u0026#34;full\u0026#34;, link = \u0026#34;probit\u0026#34;, ## estimand = \u0026#34;ATT\u0026#34;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## distance 0.6587 0.6121 0.4851 0.7278 0.1134 0.1972 ## age 25.9808 26.0690 -0.0121 0.4511 0.0902 0.2378 ## educ 10.3141 10.0920 0.1079 0.5436 0.0336 0.0807 ## married 0.1859 0.2874 -0.2608 . 0.1015 0.1015 ## nodegree 0.7244 0.6437 0.1806 . 0.0807 0.0807 ## re74 2155.0132 3117.0584 -0.1881 0.9436 0.0890 0.2863 ## re75 1490.7221 1834.4220 …","date":1662336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1662336000,"objectID":"2ce2bc3725b3a8aff6cde5b4b0c90240","permalink":"https://ngreifer.github.io/blog/subgroup-analysis-psm/","publishdate":"2022-09-05T00:00:00Z","relpermalink":"/blog/subgroup-analysis-psm/","section":"blog","summary":"Today I’m going to demonstrate performing a subgroup analysis after propensity score matching using R. Subgroup analysis, also known as moderation analysis or the analysis of effect modification, concerns the estimation of treatment effects within subgroups of a pre-treatment covariate.","tags":["matching","propensity-scores","R","subgroup analysis"],"title":"Subgroup Analysis After Propensity Score Matching Using R","type":"blog"},{"authors":null,"categories":null,"content":"This page documents the software packages I have worked on. if you have any questions about them, please submit your question to their GitHub issues page rather than emailing me. You are also welcome to ask a question on StackOverflow or CrossValidated, which I check often.\nR packages These packages are ones that I am a primary author on and have expertise on the methods implemented. I consider these packages to be “mine”, at least partly, in the sense that I can speak not only on the implementation but on the methods as well.\n cobalt: Covariate Balance Tables and Plots  Noah Greifer | website | CRAN | source   WeightIt: Weighting for Covariate Balance in Observational Studies  Noah Greifer | website | CRAN | source   MatchIt: Nonparametric Preprocessing for Parametric Causal Inference  Daniel Ho, Kosuke Imai, Gary King, Elizabeth Stuart, and Noah Greifer | website | CRAN | source   MatchThem: Matching and Weighting Multiply Imputed Datasets  Farhad Pishgar and Noah Greifer | CRAN | source   optweight: Targeted Stable Balancing Weights Using Optimization  Noah Greifer | CRAN | source   MatchingFrontier: Computation of the Balance-Sample Size Frontier in Matching Methods for Causal Inference  Gary King, Christopher Lucas, Richard Nielsen, and Noah Greifer | website | source   fwb: Fractional Weighted Bootstrap  Noah Greifer | website | CRAN | source    These packages are ones that I have developed as part of my job but which I don’t consider “mine” in the sense that I am not the primary maintainer and I don’t have expertise on the methods implemented. Please do not contact me about these packages.\n  netlit: Augment a literature review with network analysis statistics\n Devin Judge-Lord and Noah Greifer | website | source    EvoPhylo: Pre- And Postprocessing of Morphological Data from Relaxed Clock Bayesian Phylogenetics\n Tiago Simões, Noah Greifer, and Stephanie Pierce | website | CRAN | source    Morphoscape: Computation and Visualization of Adaptive Landscapes\n Blake Dickson, Stephanie Pierce, and Noah Greifer | website | CRAN | source    ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6fcae98d7df3b6c44952e7b5fed181e3","permalink":"https://ngreifer.github.io/software/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/software/","section":"","summary":"This page documents the software packages I have worked on. if you have any questions about them, please submit your question to their GitHub issues page rather than emailing me. You are also welcome to ask a question on StackOverflow or CrossValidated, which I check often.","tags":null,"title":"Software","type":"page"}]